<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DisplayActionOk" xml:space="preserve">
    <value> correcto</value>
  </data>
  <data name="DisplayErrorLoadTaskFile" xml:space="preserve">
    <value>ERROR: No se puede cargar el archivo XML con la configuración de la tarea de grabación.</value>
  </data>
  <data name="DisplayExceptionFormat" xml:space="preserve">
    <value>EXCEPCIÓN: {1}</value>
  </data>
  <data name="DisplayLoadingXml" xml:space="preserve">
    <value>Leyendo XML...</value>
  </data>
  <data name="ErrorNoArguments" xml:space="preserve">
    <value>ERROR: No se han especificado argumentos.
Debe proporcionarse el archivo XML con la descripción de la tarea de grabación.
Especifique /HELP como argumento para obtener más información.</value>
  </data>
  <data name="InfoLoadingTaskFile" xml:space="preserve">
    <value>Info: Leyendo el archivo XML de la tarea...</value>
  </data>
  <data name="InfoOk" xml:space="preserve">
    <value>correcto</value>
  </data>
  <data name="LogExceptionLoadTaskFile" xml:space="preserve">
    <value>No se puede cargar el archivo XML con la configuración de la tarea de grabación.</value>
  </data>
  <data name="LoggerExceptionFormat" xml:space="preserve">
    <value>{0}
Detalles de la excepción: {1}</value>
  </data>
  <data name="LogInfoLoadingXml" xml:space="preserve">
    <value>Cargando archivo XML
{0}</value>
  </data>
  <data name="LogInfoLoadingXmlOk" xml:space="preserve">
    <value>Archivo XML leído</value>
  </data>
  <data name="PressAnyKeyEnd" xml:space="preserve">
    <value>Pulse cualquier tecla para finalizar...</value>
  </data>
  <data name="ProgramCaption" xml:space="preserve">
    <value>Utilidad de ejecución de grabación IPTV</value>
  </data>
  <data name="StartLogo" xml:space="preserve">
    <value>Utilidad de ejecución de grabación IPTV
Versión {0}
Copyright (C) 2014-2015, Codeplex user AlphaCentaury and its contributors. Todos los derechos reservados.</value>
  </data>
  <data name="LogErrorTooLate" xml:space="preserve">
    <value>¡DEMASIADO TARDE! ¡Lo sentimos!</value>
  </data>
  <data name="LogExceptionAssignProcessToJobObject" xml:space="preserve">
    <value>AssignProcessToJobObject({0}, {1})</value>
  </data>
  <data name="LogExceptionCreateJobObject" xml:space="preserve">
    <value>CreateJobObject('{0}')</value>
  </data>
  <data name="LogExceptionSetInformationJobObject" xml:space="preserve">
    <value>SetInformationJobObject(...)</value>
  </data>
  <data name="LogInfoCreatingWindowsJob" xml:space="preserve">
    <value>Creando Job de Windows</value>
  </data>
  <data name="LogInfoCreatingWindowsJobOk" xml:space="preserve">
    <value>Job de Windows creado</value>
  </data>
  <data name="LogVerboseJobHandle" xml:space="preserve">
    <value>Indentificador del Job: {0}</value>
  </data>
  <data name="LogVerboseJobName" xml:space="preserve">
    <value>Nombre del Job: {0}</value>
  </data>
  <data name="LogVerboseScheduledStartTimeGap" xml:space="preserve">
    <value>Hora programada de inicio: {0:T}
Tiempo total programado: {1}
Diferencia: {2}
Tiempo de grabación real: {3}</value>
  </data>
  <data name="LogWarningDevelopmentWindowsJob" xml:space="preserve">
    <value>Ejecutando en contexto de desarrollo. La creación del Job de Windows se ha cancelado</value>
  </data>
  <data name="DisplayLaunchingRecorder" xml:space="preserve">
    <value>Ejecutando grabador externo...</value>
  </data>
  <data name="DisplayLaunchingRecorderOk" xml:space="preserve">
    <value> correcto (PID {0})</value>
  </data>
  <data name="DisplayRecorderFinished" xml:space="preserve">
    <value>El programa de grabación ha finalizado</value>
  </data>
  <data name="DisplayRecordingTimeExceeded" xml:space="preserve">
    <value>ERROR: ¡Tiempo de grabación excedido!</value>
  </data>
  <data name="DisplayScheduledDuration" xml:space="preserve">
    <value>La duración programada de la grabación era {0}, con un margen de seguridad adicional de {1} minutos.</value>
  </data>
  <data name="DisplayTaskName" xml:space="preserve">
    <value>Nombre de la tarea: {0}</value>
  </data>
  <data name="DisplayTotalRecordingTime" xml:space="preserve">
    <value>La duración total de la grabación, incluyendo márgenes de seguridad, será {0}.</value>
  </data>
  <data name="DisplayWarningBehindSchedule" xml:space="preserve">
    <value>Aviso: Grabando con retraso. El retraso es {0}</value>
  </data>
  <data name="DisplayWarningRecordingLate" xml:space="preserve">
    <value>Aviso: Grabando CON RETRASO, mas allá del margen de seguridad de {0} minutos</value>
  </data>
  <data name="FormatRecordFileDate" xml:space="preserve">
    <value>{0}-{1:00}-{2:00} {3:00}-{4:00}-{5:00}</value>
  </data>
  <data name="FormatRecordFileDelayed" xml:space="preserve">
    <value> ¡Con-retraso!</value>
    <comment>Keep start space!</comment>
  </data>
  <data name="FormatRecordFileName" xml:space="preserve">
    <value>{0}\{1} {2}{3}{4}</value>
  </data>
  <data name="LogErrorRecordingTimeExceeded" xml:space="preserve">
    <value>¡Se ha sobrepasado el tiempo de grabación!</value>
  </data>
  <data name="LogExceptionLaunchingRecorder" xml:space="preserve">
    <value>No se ha podido ejecutar el programa externo de grabación</value>
  </data>
  <data name="LogInfoLaunchingRecorder" xml:space="preserve">
    <value>Ejecutando el programa de grabación externo</value>
  </data>
  <data name="LogInfoLaunchingRecorderOk" xml:space="preserve">
    <value>Se ha iniciado correctamente el programa de grabación (el Id del proceso es {0})</value>
  </data>
  <data name="LogInfoRecorderExited" xml:space="preserve">
    <value>El programa de grabación ha terminado (el código de salida es {0})</value>
  </data>
  <data name="LogVerboseAboutLaunchRecorder" xml:space="preserve">
    <value>A punto de ejecutar el grabador externo</value>
  </data>
  <data name="LogVerboseCreatingRecorderParameters" xml:space="preserve">
    <value>Creando los parámetros para el grabador externo</value>
  </data>
  <data name="LogVerboseWaitForExit" xml:space="preserve">
    <value>WaitForExit()</value>
  </data>
  <data name="LogWarningBehindSchedule" xml:space="preserve">
    <value>Grabando con retraso. El retraso es {0}</value>
  </data>
  <data name="LogWarningRecordingLate" xml:space="preserve">
    <value>Grabando CON RETRASO, mas allá del margen de seguridad de {0} minutos</value>
  </data>
  <data name="ProgramHelp" xml:space="preserve">
    <value>{0} XMLTaskFile
{0} /help | /h | /? | -help | -h | -?

XMLTaskFile     Archivo XMLcon la definición de la tarea de grabación.
                Carga la tarea y ejecuta el grabador externo.

/help      Muestra este mensaje de ayuda.

-- Opciones generales --
/nologo     Suprimer el mensaje de cabecera.
Las opciones y los selectores se pueden especificar con '/' o con '-'</value>
  </data>
  <data name="ExceptionEndInnerList" xml:space="preserve">
    <value>[Fin de la lista de excepciones anidadas]</value>
  </data>
  <data name="DisplayDurationEndsToday" xml:space="preserve">
    <value>La grabación finalizará hoy a las {0:T}.</value>
  </data>
  <data name="DisplayDurationEndsTomorrow" xml:space="preserve">
    <value>La grabación finalizará manaña a las {0:T}.</value>
  </data>
</root>